function [  mask, maskR,...
            label2rasterID,...
            sub_label2rasterID,...
            s1vv,...
            s1vh,...
            rgb,...
            red1,...
            red2,...
            red3,...
            red4,...
            swir1,...
            swir2,...
            nir,...
            dynProb,...
            dynLabel,...
            btype_label,...
            label_height,...
            bldgftprnt,...
            Q,data...
            ] = loadCountryData()
    %% load data
    [mask, maskR] = readgeoraster("data/MASK/rasterized_vector.tif");
    label2rasterID = readtable("data/MASK/MAPPING_RASTER_ID_AND_LABEL.xlsx");
    sub_label2rasterID = readtable("data/BLDG/BACHOFER DLR/rID_coverage.csv");

    %% load EO and EO-derived data
    [s1vv, ~] = readgeoraster("data/VV/2022_VV_LEVEL0_RWANDA_WHOLE_10M.tif");
    [s1vh, ~] = readgeoraster("data/VH/2022_VH_LEVEL0_RWANDA_WHOLE_10M.tif");
    [rgb, ~] = readgeoraster("data/RGB/2022_RGB_LEVEL0_RWANDA_WHOLE_10M.tif");
    [red1, ~] = readgeoraster("data/RED1234/RED1/2022_RED1_LEVEL0_RWANDA_WHOLE_10M.tif");
    [red2, ~] = readgeoraster("data/RED1234/RED2/2022_RED2_LEVEL0_RWANDA_WHOLE_10M.tif");
    [red3, ~] = readgeoraster("data/RED1234/RED3/2022_RED3_LEVEL0_RWANDA_WHOLE_10M.tif");
    [red4, ~] = readgeoraster("data/RED1234/RED4/2022_RED4_LEVEL0_RWANDA_WHOLE_10M.tif");
    [swir1, ~] = readgeoraster("data/SWIR12NIR/SWIR1/2022_SWIR1_LEVEL0_RWANDA_WHOLE_10M.tif");
    [swir2, ~] = readgeoraster("data/SWIR12NIR/SWIR2/2022_SWIR2_LEVEL0_RWANDA_WHOLE_10M.tif");
    [nir, ~] = readgeoraster("data/SWIR12NIR/NIR/2022_NIR_LEVEL0_RWANDA_WHOLE_10M.tif");
    [dynProb, ~] = readgeoraster("data/DYNAMIC/builtAveProb/2022_DYNNAMICWORLD_builtAveProb_LEVEL0_RWANDA_WHOLE_10M.tif");
    [dynLabel, ~] = readgeoraster("data/DYNAMIC/labelModeCat/2022_DYNNAMICWORLD_labelModeCat_LEVEL0_RWANDA_WHOLE_10M.tif");
    [bldgftprnt_osm, ~] = readgeoraster("data/BLDG/OPENSTREETMAP/rasterized_OSM.tif");
    [bldgftprnt_ove, ~] = readgeoraster("data/BLDG/OVERTURE/rasterized_Overture.tif");
    [bldgftprnt_goo, ~] = readgeoraster("data/BLDG/GOOGLE 042021-052023/rasterized_googleOpenBldg.tif");
    [bldgftprnt_mic, ~] = readgeoraster("data/BLDG/MICROSOFT 2014-2021/rasterized_microsoftbldg.tif");
    [btype_label, ~] = readgeoraster("data/BLDG/BACHOFER DLR/EO4Kigali_2015_btype.tif");
    [label_height, ~] = readgeoraster("data/BLDG/BACHOFER DLR/EO4Kigali_2015_bheight.tif");
    bldgftprnt = (bldgftprnt_osm > 0) | (bldgftprnt_ove > 0) | (bldgftprnt_goo > 0) | (bldgftprnt_mic > 0);
    % geotiffwrite("data/BLDG/bldgcombined.tif",single(bldgftprnt),maskR)

    %% load census records
    census_fpath = "data/CENSUS 2022/census2022.csv";
    macro_taxonomy_table_fpath = "data/CENSUS 2022/macro_taxonomy_table.csv";
    height_table_fpath= "data/CENSUS 2022/height_table.csv";
    dwelling_table_fpath = "data/CENSUS 2022/dwelling_table.csv";
    [Q, data] = preprocessCensus(   census_fpath, ...
                                    macro_taxonomy_table_fpath, ...
                                    height_table_fpath, ...
                                    dwelling_table_fpath);
end